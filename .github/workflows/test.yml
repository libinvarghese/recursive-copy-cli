---
# This workflow will do a clean install of node dependencies, build the source code and run tests across different
# versions of node
# For more information
# see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: test

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - master
      - develop
    tags:
      - v*
    paths-ignore:
      - '**.md'
      - scripts/**
      - .vscode/**
      - .github/**
      - '!.github/workflows/test.yml'
  pull_request:
    branches:
      - master
      - develop
    paths-ignore:
      - '**.md'
      - scripts/**
      - .vscode/**
      - .github/**
      - '!.github/workflows/test.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 12.x
    steps:
      - name: Wait for build
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-build
        with:
          token: ${{ secrets.REPO_ACCESS }}
          # yamllint disable-line rule:quoted-strings
          checkName: 'build (12.x)'
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          timeoutSeconds: 180
      - name: Exit when build workflow has failed
        if:
          steps.wait-for-build.outputs.conclusion != 'success' && steps.wait-for-build.outputs.conclusion != 'timed_out'
        run: |
          exit 1
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get npm cache directory
        id: get-npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache Node.js modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ steps.get-npm-cache.outputs.dir }}
          key: ${{ runner.OS }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-${{ env.cache-name }}-
            ${{ runner.OS }}-
      - name: Cache Project node_modules
        uses: actions/cache@v1
        id: cache-project-node-modules
        env:
          cache-name: cache-project-node-modules
        with:
          path: node_modules
          key: ${{ runner.OS }}-${{ env.cache-name }}-${{ github.repository }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        if: steps.cache-project-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - run: npm run cover
        env:
          CI: true
          CHECK_COVERAGE: true
      - name: Upload to Codecov
        uses: codecov/codecov-action@v1.0.10
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          # fail_ci_if_error: true # optional (default = false)
...
