# ==========================
#
# THIS IS A GENERATED FILE. Don't modify this file.
#
# Modify file in .github/jsTemplates/workflows/test.yml.ts
#
# ==========================

name: test
'on':
  push:
    branches:
      - develop
      - master
    paths-ignore:
      - '**.md'
      - scripts/**
      - .vscode/**
      - .github/**
      - '!.github/workflows/test.yml'
    tags:
      - v*
  pull_request:
    branches:
      - develop
      - master
    paths-ignore:
      - '**.md'
      - scripts/**
      - .vscode/**
      - .github/**
      - '!.github/workflows/test.yml'
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 12.x
    steps:
      - name: Wait for build (12.x)
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-Build12X
        with:
          token: ${{ secrets.REPO_ACCESS }}
          checkName: build (12.x)
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          timeoutSeconds: 180
      - name: Exit when build (12.x) workflow has failed
        if: >-
          steps.wait-for-Build12X.outputs.conclusion != 'success' && steps.wait-for-Build12X.outputs.conclusion !=
          'timed_out'
        run: |
          exit 1
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.1.4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get npm cache directory
        id: get-npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache Node.js modules
        uses: actions/cache@v2.1.4
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ steps.get-npm-cache.outputs.dir }}
          key: ${{ runner.OS }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-${{ env.cache-name }}-
            ${{ runner.OS }}-
      - name: Cache Project node_modules
        uses: actions/cache@v2.1.4
        id: cache-project-node-modules
        env:
          cache-name: cache-project-node-modules
        with:
          path: node_modules
          key: ${{ runner.OS }}-${{ env.cache-name }}-${{ github.repository }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        if: steps.cache-project-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - run: npm run cover
        env:
          CHECK_COVERAGE: true
      - name: Upload to Codecov
        uses: codecov/codecov-action@v1.2.1
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
