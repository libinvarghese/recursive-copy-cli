---

# This workflow will do a clean install of node dependencies, build the source code and run linter
# For more information
# see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: lint-all

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - master
      - develop
    tags:
      - v*
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - master
      - develop
    paths-ignore:
      - '**.md'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Get pip cache directory
        id: get-pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache pip
        uses: actions/cache@v1
        id: cache-pip
        env:
          cache-name: cache-pip
        with:
          path: ${{ steps.get-pip-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-
      - name: Install dependencies
        # For some reason the cache hit check does not work, pip install must be called for tools to register in path
        # if: steps.cache-pip.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Use Node.js $12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Get npm cache directory
        id: get-npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache Node.js modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ steps.get-npm-cache.outputs.dir }}
          key: ${{ runner.OS }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-${{ env.cache-name }}-
            ${{ runner.OS }}-
      - name: Cache Project node_modules
        uses: actions/cache@v1
        id: cache-project-node-modules
        env:
          cache-name: cache-project-node-modules
        with:
          path: node_modules
          key: ${{ runner.OS }}-${{ env.cache-name }}-${{ github.repository }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        if: steps.cache-project-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - run: npm run lint
        env:
          CI: true
...
