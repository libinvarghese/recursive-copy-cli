# ==========================
#
# THIS IS A GENERATED FILE. Don't modify this file.
#
# Modify file in .github/jsTemplates/workflows/release.yml.ts
#
# ==========================

name: release
'on':
  schedule:
    - cron: 0 1 * * SAT
  repository_dispatch:
    types:
      - release_on_demand
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: develop
          fetch-depth: 0
      - name: Git fetch master
        run: 'git fetch --no-tags --prune --progress --no-recurse-submodules origin +master:master'
      - name: Use Node.js 12.x
        uses: actions/setup-node@v2.1.1
        with:
          node-version: 12.x
      - name: Get npm cache directory
        id: get-npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache Node.js modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: '${{ steps.get-npm-cache.outputs.dir }}'
          key: '${{ runner.OS }}-${{ env.cache-name }}-${{ hashFiles(''**/package-lock.json'') }}'
          restore-keys: |
            ${{ runner.OS }}-${{ env.cache-name }}-
            ${{ runner.OS }}-
      - name: Cache Project node_modules
        uses: actions/cache@v2
        id: cache-project-node-modules
        env:
          cache-name: cache-project-node-modules
        with:
          path: node_modules
          key: '${{ runner.OS }}-${{ env.cache-name }}-${{ github.repository }}-${{ hashFiles(''**/package-lock.json'') }}'
      - name: Install Dependencies
        if: steps.cache-project-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Get pip cache directory
        id: get-pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache pip
        uses: actions/cache@v2
        id: cache-pip
        env:
          cache-name: cache-pip
        with:
          path: '${{ steps.get-pip-cache.outputs.dir }}'
          key: '${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles(''requirements.txt'') }}'
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - run: npm run lint
      - run: npm run cover
        env:
          CHECK_COVERAGE: true
      - run: npm run build
        env:
          NODE_ENV: production
      - name: Do semantic release
        run: GITHUB_REF=refs/heads/develop GITHUB_ACTION=run8 npm run release
        env:
          GITHUB_TOKEN: '${{ secrets.REPO_ACCESS }}'
          NPM_TOKEN: '${{ secrets.NPM_PUBLISH_TOKEN }}'
