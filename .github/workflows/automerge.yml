# ==========================
#
# THIS IS A GENERATED FILE. Don't modify this file.
#
# Modify file in .github/jsTemplates/workflows/automerge.yml.ts
#
# ==========================

name: automerge-dependabot
'on':
  pull_request:
    types:
      - reopened
      - synchronize
      - labeled
    branches:
      - develop
jobs:
  dump-github-context:
    runs-on: ubuntu-latest
    steps:
      - name: Dump github context
        env:
          GITHUB_CONTEXT: '${{ toJson(github) }}'
        run: echo "$GITHUB_CONTEXT"
  cancel-not-dependabot:
    runs-on: ubuntu-latest
    if: 'github.event.pull_request.user.login == ''dependabot[bot]'''
    steps:
      - run: 'echo Pull request created by ${{ github.event.pull_request.user.login }} is dependabot[bot]'
  cancel-released-label:
    needs:
      - cancel-not-dependabot
    runs-on: ubuntu-latest
    if: |-
      contains( github.event.pull_request.labels.*.name, 'dependencies')
      && !contains( github.event.pull_request.labels.*.name, 'released')
    steps:
      - run: echo There is no 'released' label!
  cancel-dependencies-label:
    needs:
      - cancel-released-label
    runs-on: ubuntu-latest
    if: github.event.action != 'labeled' || github.event.label.name != 'dependencies'
    steps:
      - run: echo There is no 'dependencies' label!
  github-action:
    needs:
      - cancel-dependencies-label
    outputs:
      shouldMerge: '${{ steps.label-length.outputs.result >= 2 }}'
      didCommit: '${{ steps.commit-dependencies.conclusion }}'
      hasCommit: '${{ steps.update-dependencies.outputs.has-commit }}'
    if: github.event.action != 'labelled' || github.event.label.name != 'dependencies'
    runs-on: ubuntu-latest
    steps:
      - name: Dump github.event.pull_request.labels.*.name context
        env:
          PULL_REQUEST_LABELS_CONTEXT: '${{ toJson(github.event.pull_request.labels.*.name) }}'
        run: echo "$PULL_REQUEST_LABELS_CONTEXT"
      - uses: actions/checkout@v2
        with:
          ref: '${{ github.event.pull_request.head.ref }}'
          token: '${{ secrets.PUSH_WORKFLOW_ACCESS }}'
      - name: Use Node.js 12.x
        uses: actions/setup-node@v2.1.3
        with:
          node-version: 12.x
      - name: Get npm cache directory
        id: get-npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache Node.js modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: '${{ steps.get-npm-cache.outputs.dir }}'
          key: '${{ runner.OS }}-${{ env.cache-name }}-${{ hashFiles(''**/package-lock.json'') }}'
          restore-keys: |
            ${{ runner.OS }}-${{ env.cache-name }}-
            ${{ runner.OS }}-
      - name: Cache Project node_modules
        uses: actions/cache@v2
        id: cache-project-node-modules
        env:
          cache-name: cache-project-node-modules
        with:
          path: node_modules
          key: '${{ runner.OS }}-${{ env.cache-name }}-${{ github.repository }}-${{ hashFiles(''**/package-lock.json'') }}'
      - name: Install Dependencies
        if: steps.cache-project-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Get Array length of github.event.pull_request.labels.*.name
        id: label-length
        env:
          ARRAY: '${{ toJson(github.event.pull_request.labels.*.name) }}'
        run: |-
          echo $ARRAY
          ARRAY_LENGTH=$( echo $ARRAY | jq '. | length' )
          echo "::set-output name=result::$ARRAY_LENGTH"
      - name: Update .github/jsTemplates/utils/dependencies.ts
        id: update-dependencies
        if: |-
          steps.label-length.outputs.result >= 2
          && contains( github.event.pull_request.labels.*.name, 'github_actions')
        run: >
          npx ts-node scripts/githubActionsDepGen.ts

          git add .github/jsTemplates/utils/dependencies.ts

          npm run js2yaml

          git add .github/workflows

          git status

          git diff --quiet

          git diff --staged --quiet && echo "has-commit=false" || echo "has-commit=true"

          git diff --staged --quiet && echo "::set-output name=has-commit::false" || echo "::set-output
          name=has-commit::true"
      - uses: stefanzweifel/git-auto-commit-action@v4.8.0
        with:
          commit_message: 'chore(deps): bump dependency in template'
          commit_options: '--no-verify'
        id: commit-dependencies
        if: |-
          (steps.update-dependencies.conclusion == 'success'
            && steps.update-dependencies.outputs.has-commit == 'true' )
          || steps.update-dependencies.conclusion == 'skipped'
  automerge-dependabot:
    needs:
      - github-action
    if: |-
      needs.github-action.outputs.shouldMerge == 'true'
      && ( needs.github-action.outputs.didCommit == 'success' || needs.github-action.outputs.didCommit == 'skipped')
    runs-on: ubuntu-latest
    steps:
      - name: Dump needs context
        env:
          NEEDS_CONTEXT: '${{ toJson(needs) }}'
        run: echo "$NEEDS_CONTEXT"
      - name: Wait for commitlint
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-Commitlint
        with:
          token: '${{ secrets.REPO_ACCESS }}'
          checkName: commitlint
          ref: '${{ github.event.pull_request.head.sha || github.sha }}'
          timeoutSeconds: 180
      - name: Exit when commitlint workflow has failed
        if: >-
          steps.wait-for-Commitlint.outputs.conclusion != 'success' && steps.wait-for-Commitlint.outputs.conclusion !=
          'timed_out'
        run: |
          exit 1
      - name: Wait for lint
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-Lint
        with:
          token: '${{ secrets.REPO_ACCESS }}'
          checkName: lint
          ref: '${{ github.event.pull_request.head.sha || github.sha }}'
          timeoutSeconds: 180
      - name: Exit when lint workflow has failed
        if: steps.wait-for-Lint.outputs.conclusion != 'success' && steps.wait-for-Lint.outputs.conclusion != 'timed_out'
        run: |
          exit 1
      - name: Wait for build (12.x)
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-Build12X
        with:
          token: '${{ secrets.REPO_ACCESS }}'
          checkName: build (12.x)
          ref: '${{ github.event.pull_request.head.sha || github.sha }}'
          timeoutSeconds: 180
      - name: Exit when build (12.x) workflow has failed
        if: >-
          steps.wait-for-Build12X.outputs.conclusion != 'success' && steps.wait-for-Build12X.outputs.conclusion !=
          'timed_out'
        run: |
          exit 1
      - name: Wait for test (12.x)
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-Test12X
        with:
          token: '${{ secrets.REPO_ACCESS }}'
          checkName: test (12.x)
          ref: '${{ github.event.pull_request.head.sha || github.sha }}'
          timeoutSeconds: 180
      - name: Exit when test (12.x) workflow has failed
        if: >-
          steps.wait-for-Test12X.outputs.conclusion != 'success' && steps.wait-for-Test12X.outputs.conclusion !=
          'timed_out'
        run: |
          exit 1
      - name: Merge me!
        uses: libinvarghese/merge-me-action@v1
        with:
          GITHUB_LOGIN: 'dependabot[bot]'
          GITHUB_TOKEN: '${{ secrets.REPO_ACCESS }}'
          MERGE_METHOD: MERGE
